{"version":3,"sources":["context.js","header-container.js","footer-container.js","home.js","search.js","output.js","home-right.js","details.js","App.js","context-provider.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","HeaderContainer","props","history","useHistory","expand","href","onClick","push","src","process","width","alt","Toggle","aria-controls","Collapse","id","className","variant","FooterContainer","Home","style","textAlign","fontFamily","fontSize","marginLeft","marginRight","Search","context","useContext","useState","category","setCategory","goal","setGoal","percent","setPercent","htmlFor","onChange","e","target","value","defaultValue","Object","values","map","item","type","name","categoryId","goalId","isCharity","document","getElementById","checked","hasBeneficiary","sort","object","category_id","goal_id","is_charity","has_beneficiary","percent_raised","updateResults","Output","results","searchField","searchVal","searchResults","i","campaigns","length","results2","searchVal1","searchVal2","results3","results4","results25","results50","results75","results100","resultsover","parseInt","results5","a","b","quality","striped","bordered","hover","title","current_amount","toFixed","donators","location_country","to","campaign_id","HomeRight","fluid","Details","useParams","campaign","find","c","charity","beneficiary","is_beneficiary","barchart","md","user_first_name","user_last_name","location_city","description","average_amount","campaign_hearts","social_share_total","days_active","url","display","App","noGutters","backgroundColor","path","AppProvider","setState","console","log","actions","state","Provider","this","axios","get","resp","data","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d1823fd.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst AppContext = React.createContext()\nexport default AppContext\n\n// AppContext.Consumer\n// AppContext.Provider","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport AppContext from './context'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction HeaderContainer(props) {\r\n\r\n\r\n    const history = useHistory()\r\n\r\n    function OnClick(){\r\n        history.push('/search')\r\n    }\r\n    function home(){\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <bs.Navbar expand=\"lg\">\r\n        <a href=\"/\" onClick={home}>\r\n            <bs.Image src={`${process.env.PUBLIC_URL}/android-chrome-192x192.png`} width='75rem' alt='logo'/>\r\n        </a>\r\n        <bs.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <bs.Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <bs.Nav className=\"mr-auto\">\r\n            <span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\r\n            <bs.Button variant=\"outline-dark\" onClick={OnClick}>Search Page</bs.Button>\r\n            <span>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span>\r\n            <a href=\"https://covid19gofundme.herokuapp.com/index/\"><bs.Button variant=\"outline-dark\">Prediction Calculator</bs.Button></a>\r\n            </bs.Nav>\r\n        </bs.Navbar.Collapse>\r\n        </bs.Navbar>\r\n    )\r\n}\r\n\r\nexport default HeaderContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction FooterContainer(props) {\r\n    return (\r\n        <bs.Container className=\"footer-copyright text-center py-3\">\r\n            &copy; 2020 COVID-19 GoFundMe Analytics  \r\n        </bs.Container>\r\n    )\r\n}\r\n\r\nexport default FooterContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport {useParams} from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\nfunction Home(props) {\r\n\r\n    return (\r\n        <div style={{textAlign: \"center\", fontFamily: \"Times New Roman\", fontSize: \"1.2rem\", marginLeft: \"20px\", marginRight: \"20px\"}}>\r\n            <br/>\r\n            <p>The worldwide pandemic known as COVID-19 is spreading rapidly across the globe. In order to help those affected by the virus either medically or financially, GoFundMe campaigns for charitable contributions have skyrocketed. Among many choices it can be difficult to determine where to donate your money or how to create a high quality campaign that will get the exposure it deserves. In order to help you design compelling campaigns we have provided this search and creation help site. Let’s fight this virus together!</p>\r\n            <bs.Image src={`${process.env.PUBLIC_URL}/barcharts/gofundme.png`} width=\"250rem\" alt='barchart'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\nimport {useState} from 'react'\nimport { MDBContainer, MDBRow, MDBCol, MDBBtn } from 'mdbreact';\nimport * as bs from 'react-bootstrap'\nimport AppContext from './context'\nimport {useHistory} from 'react-router-dom'\n\nfunction Search(props) {\n\n    const context = React.useContext(AppContext)\n    const history = useHistory()\n\n    let categories = [\n        'All',\n        'Accidents & Emergencies',\n        'Animals & Pets',\n        'Babies, Kids & Family',\n        'Business & Entrepreneurs',\n        'Celebrations & Events',\n        'Community & Neighbors',\n        'Creative Arts, Music & Film',\n        'Funerals & Memorials',\n        'Travel & Adventure',\n        'Medical, Illness & Healing',\n        'Missions, Faith & Church',\n        'Non-Profits & Charities',\n        'Weddings & Honeymoons',\n        'Other',\n        'Sports, Teams & Clubs',\n        'Education & Learning',\n        'Volunteer & Service',\n        'Competitions & Pageants',\n        'Dreams, Hopes & Wishes',\n    ]\n\n    let goals = [\n        'All',\n        '<1000',\n        '1000-5000',\n        '5000-10000',\n        '10000-50000',\n        '50000-100000',\n        '>100000',\n    ]\n\n    let percents = [\n        'All',\n        '<25%',\n        '25-50%',\n        '50-75%',\n        '75-100%',\n        '>100%',\n    ]\n\n    const [category, setCategory] = useState(\"All\")\n    const [goal, setGoal] = useState(\"All\")\n    const [percent, setPercent] = useState(\"All\")\n\n    function OnClick(){\n        let categoryId = 0\n        if (category == 'Accidents & Emergencies')\n        {\n            categoryId = 2\n        }\n        else if (category == 'Animals & Pets')\n        {\n            categoryId = 3\n        }\n        else if (category == 'Babies, Kids & Family')\n        {\n            categoryId = 4\n        }\n        else if (category == 'Business & Entrepreneurs')\n        {\n            categoryId = 5\n        }\n        else if (category == 'Celebrations & Events')\n        {\n            categoryId = 6\n        }\n        else if (category == 'Community & Neighbors')\n        {\n            categoryId = 7\n        }\n        else if (category == 'Creative Arts, Music & Film')\n        {\n            categoryId = 8\n        }\n        else if (category == 'Funerals & Memorials')\n        {\n            categoryId = 9\n        }\n        else if (category == 'Travel & Adventure')\n        {\n            categoryId = 10\n        }\n        else if (category == 'Medical, Illness & Healing')\n        {\n            categoryId = 11\n        }\n        else if (category == 'Missions, Faith & Church')\n        {\n            categoryId = 12\n        }\n        else if (category == 'Non-Profits & Charities')\n        {\n            categoryId = 13\n        }\n        else if (category == 'Weddings & Honeymoons')\n        {\n            categoryId = 14\n        }\n        else if (category == 'Other')\n        {\n            categoryId = 15\n        }\n        else if (category == 'Sports, Teams & Clubs')\n        {\n            categoryId = 16\n        }\n        else if (category == 'Education & Learning')\n        {\n            categoryId = 17\n        }\n        else if (category == 'Volunteer & Service')\n        {\n            categoryId = 18\n        }\n        else if (category == 'Competitions & Pageants')\n        {\n            categoryId = 19\n        }\n        else if (category == 'Dreams, Hopes & Wishes')\n        {\n            categoryId = 20\n        }\n        else \n        {\n            categoryId = 0\n        }\n\n        let goalId = 0\n        if (goal == 'All')\n        {\n            goalId = 0\n        }\n        else if (goal == '<1000')\n        {\n            goalId = 1\n        }\n        else if (goal == '1000-5000')\n        {\n            goalId = 2\n        }\n        else if (goal == '5000-10000')\n        {\n            goalId = 3\n        }\n        else if (goal == '10000-50000')\n        {\n            goalId = 4\n        }\n        else if (goal == '50000-100000')\n        {\n            goalId = 5   \n        }\n        else\n        {\n            goalId = 6\n        }\n        let isCharity = false\n        if (document.getElementById('checkbox').checked)\n        {\n            isCharity = true\n        }\n        let hasBeneficiary = false\n        if (document.getElementById('checkbox2').checked)\n        {\n            hasBeneficiary = true\n        }\n        let sort = false\n        if (document.getElementById('checkbox3').checked)\n        {\n            sort = true\n        }\n        let percentId = 0\n        if (percent == 'All')\n        {\n            percentId = 0\n        }\n        else if (percent == '<25%')\n        {\n            percentId = 1\n        }\n        else if (percent == '25-50%')\n        {\n            percentId = 2\n        }\n        else if (percent == '50-75%')\n        {\n            percentId = 3\n        }\n        else if (percent == '75-100%')\n        {\n            percentId = 4\n        }\n        else \n        {\n            percentId = 5\n        }\n        var object = {\n            category_id: categoryId,\n            goal_id: goalId,\n            is_charity: isCharity,\n            has_beneficiary: hasBeneficiary,\n            percent_raised: percentId,\n            sort: sort,\n        };\n\n        context.updateResults(object)\n        history.push(\"/search\")\n    }\n\n    \n    \n\n        return (\n                <div style={{textAlign: \"center\", fontFamily: \"Times New Roman\"}}>\n                    <br/>\n                    <p className=\"h4 text-center mb-4\" style={{fontSize: \"2rem\"}}>Search</p>\n                    <label htmlFor=\"category\" className=\"grey-text\">\n                        Category\n                    </label>      \n                    <br/>\n                    <select \n                    onChange={ e => setCategory(e.target.value) }\n                    defaultValue={category}>\n                    {Object.values(categories).map((item) => (\n                        <option>{item}</option>\n                    ))}        \n                    </select>                   \n                    <br/><br/>\n                    <label htmlFor=\"goal\" className=\"grey-text\">\n                        Goal Range\n                    </label>      \n                    <br/>\n                    <select \n                    onChange={ e => setGoal(e.target.value) }\n                    defaultValue={goal}>\n                    {Object.values(goals).map((item) => (\n                        <option>{item}</option>\n                    ))}        \n                    </select>                   \n                    <br/><br/>\n                    <label htmlFor=\"is_charity\" className=\"grey-text\">\n                        GoFundMe campaign is a charity\n                    </label>  \n                    <br/>\n                    <input type=\"checkbox\"\n                    name = \"checkbox\" \n                    id = \"checkbox\"\n                    value=\"1\"/>\n                    <br/><br/>\n                    <label htmlFor=\"is_charity\" className=\"grey-text\">\n                        GoFundMe campaign has a beneficiary\n                    </label>  \n                    <br/>\n                    <input type=\"checkbox\"\n                    name = \"checkbox2\" \n                    id = \"checkbox2\"\n                    value=\"2\"/>\n                    <br/><br/>\n                    <label htmlFor=\"percent\" className=\"grey-text\">\n                        % of goal raised\n                    </label>      \n                    <br/>\n                    <select \n                    onChange={ e => setPercent(e.target.value) }\n                    defaultValue={percent}>\n                    {Object.values(percents).map((item) => (\n                        <option>{item}</option>\n                    ))}        \n                    </select>\n                    <br/><br/>\n                    <label htmlFor=\"is_charity\" className=\"grey-text\">\n                        Sort by Quality Score\n                    </label>  \n                    <br/>\n                    <input type=\"checkbox\"\n                    name = \"checkbox3\" \n                    id = \"checkbox3\"\n                    value=\"3\"/>\n                    <br/>\n                    <div className=\"text-center mt-4\">\n                     <bs.Button variant=\"outline-dark\" onClick={OnClick}>Search</bs.Button>\n                    </div>\n                    <br/><br/>\n                </div>\n                     );\n\n    }\n\nexport default Search","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport AppContext from './context'\nimport {useHistory, Link} from 'react-router-dom'\n\nfunction Output(props) {\n\n    const context = React.useContext(AppContext)\n\n    var results = []\n    var searchField = \"category_id\"\n    var searchVal = context.searchResults.category_id\n    for (var i = 0 ; i < context.campaigns.length ; i++)\n    {\n        if (searchVal != 0) {\n            if (context.campaigns[i][searchField] == searchVal) {\n                results.push(context.campaigns[i]);\n            }\n        }\n        else \n        {\n            results.push(context.campaigns[i]);\n        }\n    }\n    var results2 = []\n    searchField = \"goal\"\n    var searchVal1 = 0\n    var searchVal2 = 0\n    if (context.searchResults.goal_id == 0)\n    {\n        searchVal1 = 0\n        searchVal2 = 0\n    }\n    else if (context.searchResults.goal_id == 1)\n    {\n        searchVal1 = 0\n        searchVal2 = 1000\n    }\n    else if (context.searchResults.goal_id == 2)\n    {\n        searchVal1 = 1000\n        searchVal2 = 5000\n    }\n    else if (context.searchResults.goal_id == 3)\n    {\n        searchVal1 = 5000\n        searchVal2 = 10000\n    }\n    else if (context.searchResults.goal_id == 4)\n    {\n        searchVal1 = 10000\n        searchVal2 = 50000\n    }\n    else if (context.searchResults.goal_id == 5)\n    {\n        searchVal1 = 50000\n        searchVal2 = 100000\n    }\n    else \n    {\n        searchVal1 = 100000\n        searchVal2 = 0\n    }\n    for (var i = 0 ; i < results.length ; i++)\n    {\n        if (searchVal2 != 0)\n        {\n            if (results[i][searchField] >= searchVal1 && results[i][searchField] < searchVal2) {\n                results2.push(results[i]);\n            }\n        }\n        else if (searchVal1 != 0)\n        {\n            if (results[i][searchField] >= searchVal1) {\n                results2.push(results[i]);\n            }\n        }\n        else\n        {\n            results2.push(results[i]);\n        }\n    }\n    var results3 = []\n    var searchField = \"is_charity\"\n    var searchVal = context.searchResults.is_charity\n    for (var i = 0 ; i < results2.length ; i++)\n    {\n        if (searchVal) {\n            if (results2[i][searchField] == \"True\") {\n                results3.push(results2[i]);\n            }\n        }\n        else \n        {\n            if (results2[i][searchField] == \"False\") {\n                results3.push(results2[i]);\n            }\n        }\n    }\n    var results4 = []\n    var searchField = \"has_beneficiary\"\n    var searchVal = context.searchResults.has_beneficiary\n    for (var i = 0 ; i < results3.length ; i++)\n    {\n        if (searchVal) {\n            if (results3[i][searchField] == \"True\") {\n                results4.push(results2[i]);\n            }\n        }\n        else \n        {\n            if (results3[i][searchField] == \"False\") {\n                results4.push(results2[i]);\n            }\n        }\n    }\n    var results25 = []\n    var results50 = []\n    var results75 = []\n    var results100 = []\n    var resultsover = []\n    for (var i = 0 ; i < results4.length ; i++)\n    {\n        let currentAmount = parseInt(results4[i]['current_amount'])\n        let goal = parseInt(results4[i]['goal'])\n\n        var percent = currentAmount / goal\n\n        results4[i]['percent'] = percent\n\n        if (percent < .25)\n        {\n            results25.push(results4[i])\n        }\n        else if (percent >= .25 && percent < .50)\n        {\n            results50.push(results4[i])\n        }\n        else if (percent >= .50 && percent < .75)\n        {\n            results75.push(results4[i])\n        }\n        else if (percent >= .75 && percent < 1)\n        {\n            results100.push(results4[i])\n        }\n        else \n        {\n            resultsover.push(results4[i])\n        }\n    }\n    var results5 = []\n    var searchVal = context.searchResults.percent_raised\n    if (searchVal == 0)\n    {\n        results5 = results4\n    }\n    else if (searchVal == 1)\n    {\n        results5 = results25\n    }\n    else if (searchVal == 2)\n    {\n        results5 = results50\n    }\n    else if (searchVal == 3)\n    {\n        results5 = results75\n    }\n    else if (searchVal == 4)\n    {\n        results5 = results100\n    }\n    else \n    {\n        results5 = resultsover\n    }\n\n    if (context.searchResults.sort)\n    {\n        results5 = results5.sort((a, b) => (a.quality > b.quality) ? -1 : 1)\n    }\n\n    return (\n        <bs.Table striped bordered hover >\n            <thead>\n                <tr>\n                <th>Quality Score</th>\n                <th>Title</th>\n                <th>Current Amount</th>\n                <th>Goal</th>\n                <th>% Raised</th>\n                <th># of Donators</th>\n                <th>Country</th>\n                <th>Details</th>\n                </tr>\n            </thead>\n            <tbody>\n            {Object.values(results5).map((item) => (\n                <tr>\n                    <td>{item.quality}</td>\n                    <td>{item.title}</td>\n                    <td>{item.current_amount}</td>\n                    <td>{item.goal}</td>\n                    <td>{((item.percent)*100).toFixed(1)}%</td>\n                    <td>{item.donators}</td>\n                    <td>{item.location_country}</td>\n                    <td>\n                        <Link\n                            className=\"btn btn-light\" \n                            to={`/details/${item.campaign_id}`} \n                        >\n                            Details\n                        </Link>\n                    </td>\n                </tr> \n            ))}                \n            </tbody>\n        </bs.Table>\n    )\n}\n\nexport default Output","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport AppContext from './context'\nimport {useHistory} from 'react-router-dom'\n\nfunction HomeRight(props) {\n\n\n    return (\n        <div>\n            <br/>\n            <bs.Image fluid src={`${process.env.PUBLIC_URL}/barcharts/covid19pic.jpg`} alt='barchart'/>\n        </div>\n    )\n}\n\nexport default HomeRight","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport AppContext from './context'\nimport {useHistory, useParams, Link} from 'react-router-dom'\n\nfunction Details(props) {\n\n    const {id} = useParams();\n    const context = React.useContext(AppContext)\n    const campaign = context.campaigns.find(c => {\n        return (c.campaign_id === id)\n    })\n\n    let categoryId = \"\"\n\n    if (campaign.category_id == 2)\n    {\n        categoryId = 'Accidents & Emergencies'\n    }\n    else if (campaign.category_id == 3)\n    {\n        categoryId = 'Animals & Pets'\n    }\n    else if (campaign.category_id == 4)\n    {\n        categoryId = 'Babies, Kids & Family'\n    }\n    else if (campaign.category_id == 5)\n    {\n        categoryId = 'Business & Entrepreneurs'\n    }\n    else if (campaign.category_id == 6)\n    {\n        categoryId = 'Celebrations & Events'\n    }\n    else if (campaign.category_id == 7)\n    {\n        categoryId = 'Community & Neighbors'\n    }\n    else if (campaign.category_id == 8)\n    {\n        categoryId = 'Creative Arts, Music & Film'\n    }\n    else if (campaign.category_id == 9)\n    {\n        categoryId = 'Funerals & Memorials'\n    }\n    else if (campaign.category_id == 10)\n    {\n        categoryId = 'Travel & Adventure'\n    }\n    else if (campaign.category_id == 11)\n    {\n        categoryId = 'Medical, Illness & Healing'\n    }\n    else if (campaign.category_id == 12)\n    {\n        categoryId = 'Missions, Faith & Church'\n    }\n    else if (campaign.category_id == 13)\n    {\n        categoryId = 'Non-Profits & Charities'\n    }\n    else if (campaign.category_id == 14)\n    {\n        categoryId = 'Weddings & Honeymoons'\n    }\n    else if (campaign.category_id == 15)\n    {\n        categoryId = 'Other'\n    }\n    else if (campaign.category_id == 16)\n    {\n        categoryId = 'Sports, Teams & Clubs'\n    }\n    else if (campaign.category_id == 17)\n    {\n        categoryId = 'Education & Learning'\n    }\n    else if (campaign.category_id == 18)\n    {\n        categoryId = 'Volunteer & Service'\n    }\n    else if (campaign.category_id == 19)\n    {\n        categoryId = 'Competitions & Pageants'\n    }\n    else if (campaign.category_id == 20)\n    {\n        categoryId = 'Dreams, Hopes & Wishes'\n    }\n\n    let currentAmount = parseInt(campaign.current_amount)\n    let goal = parseInt(campaign.goal)\n\n    let percent = currentAmount / goal\n\n    let charity = 'No'\n    if (campaign.is_charity)\n    {\n        charity = 'Yes'\n    }\n    let beneficiary = 'No'\n    if (campaign.is_beneficiary)\n    {\n        beneficiary = 'Yes'\n    }\n    let barchart = 0\n    if (parseInt(campaign.quality) < .5)\n    {\n        barchart = 5\n    }\n    else if (parseInt(campaign.quality) < 1.0)\n    {\n        barchart = 10\n    }\n    else if (parseInt(campaign.quality) < 1.5)\n    {\n        barchart = 15\n    }\n    else if (parseInt(campaign.quality) < 2.0)\n    {\n        barchart = 20\n    }\n    else if (parseInt(campaign.quality) < 2.5)\n    {\n        barchart = 25\n    }\n    else if (parseInt(campaign.quality) < 3.0)\n    {\n        barchart = 30\n    }\n    else if (parseInt(campaign.quality) < 3.5)\n    {\n        barchart = 35\n    }\n    else if (parseInt(campaign.quality) < 4.0)\n    {\n        barchart = 40\n    }\n    else \n    {\n        barchart = 45\n    }\n\n\n    return (\n        <div style={{fontFamily: \"Times New Roman\"}}>\n            <br/>\n            <h1>{campaign.title}</h1>\n            <br/>\n            <bs.Row>\n                <bs.Col md=\"4\">\n                    <h5>Creator: {campaign.user_first_name} {campaign.user_last_name}</h5>\n                </bs.Col>\n                <bs.Col md=\"4\">\n                    <h5>Location: {campaign.location_city}, {campaign.location_country}</h5>\n                </bs.Col>\n                <bs.Col md=\"4\">\n                    <h5>Category: {categoryId}</h5>\n                </bs.Col>\n            </bs.Row>\n            <br/>\n            <p>{campaign.description}</p>\n            <br/>\n            <bs.Row>\n                <bs.Col md=\"6\">\n                    <bs.Row>\n                        <h3>Quality Score: {campaign.quality}</h3>\n                    </bs.Row>\n                    <br/>\n                    <bs.Row>\n                        <p>The Quality Score is intended to distinguish between higher and lower quality campaigns. Although measuring \n                            the quality is impossible to do with complete accuracy, the quality score is designed to estimate the genuinity and legitimacy of the campaign. The Quality Score is calculated based on a variety of metrics, including the category, the goal, the current amount,\n                            the amount of donators, the description length, the amount of social media shares, whether or not the \n                            campaign has a beneficiary, whether or not the campaign is linked to the user's Facebook, whether or not the \n                            campaign is deactivated, and whether or not the campaign updates automatically post to Facebook. \n                        </p>\n                    </bs.Row>\n                    <br/>\n                    <bs.Row>\n                        <bs.Image src={`${process.env.PUBLIC_URL}/barcharts/${barchart}.png`} width=\"400rem\" alt='barchart'/>\n                    </bs.Row>\n                </bs.Col>\n                <bs.Col md=\"6\">\n                    <bs.Row>\n                        <bs.Col md=\"4\">\n                        <b>Current Amount</b>\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        <b>Goal</b>\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        <b>% Raised</b>\n                        </bs.Col>\n                    </bs.Row>\n                    <bs.Row>\n                        <bs.Col md=\"4\">\n                        {campaign.current_amount}\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        {campaign.goal}\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        {(percent*100).toFixed(2)}%\n                        </bs.Col>\n                    </bs.Row>\n                    <br/><br/>\n                    <bs.Row>\n                        <bs.Col md=\"6\">\n                        <b># of Donators</b>\n                        </bs.Col>\n                        <bs.Col md=\"6\">\n                        <b>Average Amount Donated</b>\n                        </bs.Col>\n                    </bs.Row>\n                    <bs.Row>\n                        <bs.Col md=\"6\">\n                        {campaign.donators}\n                        </bs.Col>\n                        <bs.Col md=\"6\">\n                        ${parseInt(campaign.average_amount).toFixed(2)}\n                        </bs.Col>\n                    </bs.Row>\n                    <br/><br/>\n                    <bs.Row>\n                        <bs.Col md=\"4\">\n                        <b>Campaign Hearts</b>\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        <b># Times Shared</b>\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        <b>Days Active</b>\n                        </bs.Col>\n                    </bs.Row>\n                    <bs.Row>\n                        <bs.Col md=\"4\">\n                        {campaign.campaign_hearts}\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        {campaign.social_share_total}\n                        </bs.Col>\n                        <bs.Col md=\"4\">\n                        {campaign.days_active}\n                        </bs.Col>\n                    </bs.Row>\n                    <br/><br/>\n                    <bs.Row>\n                        <bs.Col md=\"6\">\n                        <b>Is Campaign a Charity?</b>\n                        </bs.Col>\n                        <bs.Col md=\"6\">\n                        <b>Does Campaign have a Beneficiary?</b>\n                        </bs.Col>\n                    </bs.Row>\n                    <bs.Row>\n                        <bs.Col md=\"6\">\n                        {charity}\n                        </bs.Col>\n                        <bs.Col md=\"6\">\n                        {beneficiary}\n                        </bs.Col>\n                    </bs.Row>\n                </bs.Col>\n            </bs.Row>\n            <br/><br/><br/>\n            <a href={`${campaign.url}`}>\n                <div style={{textAlign: \"center\"}}>   \n                    <bs.Button variant=\"dark\" style={{display: \"inline-block\"}} >\n                        See GoFundMe Page\n                    </bs.Button>\n                </div>\n            </a>\n            <br/><br/><br/>\n        </div>\n    )\n}\n\nexport default Details","import React from 'react';\nimport './App.scss';\nimport * as bs from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport HeaderContainer from './header-container'\nimport FooterContainer from './footer-container'\nimport Home from './home'\nimport Search from './search'\nimport Output from './output'\nimport HomeRight from './home-right'\nimport Details from './details'\n\nfunction App(props) {\n  return (\n    <Router>\n      <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 shadow-sm\">\n          <bs.Col className=\"px-3 py-2\" style={{backgroundColor: \"#9FBEDF\"}}>\n            <HeaderContainer/>\n          </bs.Col>\n        </bs.Row>\n        <bs.Row noGutters className=\"flex-grow-1\">\n          <bs.Col md=\"3\" style={{backgroundColor: \"#f0f0f0\"}}>\n            <Switch>\n              <Route path=\"/search\">\n                <Search/>\n              </Route>\n              <Route path=\"/details/:id\">\n                <Search/>\n              </Route>\n              <Route path=\"/\">\n                <Home/>\n              </Route>\n            </Switch>\n          </bs.Col>\n          <bs.Col md=\"9\" style={{backgroundColor: \"#f0f0f0\"}}>\n            <Switch>\n              <Route path=\"/search\">\n                <Output/>\n              </Route>\n              <Route path=\"/details/:id\">\n                <Details/>\n              </Route>\n              <Route path=\"/\">\n                <HomeRight/>\n              </Route>\n            </Switch>\n          </bs.Col>\n        </bs.Row>\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0\">\n          <bs.Col className=\"px-3 py-2\" style={{backgroundColor: \"#9FBEDF\"}}>\n            <FooterContainer/>\n          </bs.Col>\n        </bs.Row>\n      </bs.Container>\n    </Router>  \n  );\n}\n\nexport default App;\n","import React from 'react'\nimport axios from 'axios'\nimport AppContext from './context'\nimport App from './App'\nimport produce from 'immer'\n\n/** The context provider for our app */\nexport default class AppProvider extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.actions = {\n            updateResults: this.updateResults,\n        }\n        this.state = {\n            campaigns: [],\n            searchResults: {},\n        }\n    }\n\n    updateResults = object => {\n        this.setState({\n            searchResults: object\n        })\n        console.log(object)\n    }\n\n\n\n    render() {\n\n\n        return (\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\n                <App />\n            </AppContext.Provider>\n        )\n    }\n\n    async componentDidMount() {\n        const resp = await axios.get('https://covid19gofundme.herokuapp.com/api/campaign/')\n        \n        this.setState({\n            campaigns: resp.data,\n        })\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport AppProvider from './context-provider';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}