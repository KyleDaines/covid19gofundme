{"version":3,"sources":["context.js","header-container.js","left-container.js","right-container.js","footer-container.js","product-card.js","home.js","about.js","help.js","product-details.js","shopping-cart.js","checkout.js","receipt.js","App.js","context-provider.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","HeaderContainer","props","context","useContext","history","useHistory","expand","alt","src","process","width","Toggle","aria-controls","Collapse","id","className","Link","href","onClick","push","cartCount","title","alignRight","Item","Divider","LeftContainer","to","products","length","categories","map","post","key","count","RightContainer","FooterContainer","ProductCard","myProduct","product","style","position","top","right","backgroundColor","color","Img","variant","filename","Body","Title","name","Text","price","Home","useParams","myProducts","p","category","fluid","Object","values","md","About","noGutters","textAlign","padding","Help","ProductDetails","useState","imgIdx","setImgIdx","searchId","find","toString","description","addToCart","height","paddingTop","paddingRight","onMouseOver","onMouseLeave","marginRight","Cart","totalCost","Table","striped","bordered","hover","keys","cart","item","x","e","removeFromCart","toFixed","display","stripePromise","loadStripe","Checkout","stripe","CheckoutController","total","cartTotal","useStripe","elements","useElements","initialValues","address1","address2","city","state","zipcode","validateOnChange","validateOnBlur","validate","errors","onSubmit","actions","a","console","log","axios","items","payment_intent","resp","confirmCardPayment","data","client_secret","payment_method","card","getElement","CardElement","billing_details","result","error","message","setFieldError","paymentIntent","status","clearCart","setTimeout","setSubmitting","form","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","PaymentForm","Header","as","disable","isSubmitting","type","rProps","options","disabled","meta","role","aria-hidden","Input","Group","Label","Control","placeholder","field","touched","Receipt","App","path","AppProvider","pid","setState","produce","draft","prodID","this","Provider","value","get","prod","cat","filter","pro","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c5d0260.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst AppContext = React.createContext()\nexport default AppContext\n\n// AppContext.Consumer\n// AppContext.Provider","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport AppContext from './context'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nfunction HeaderContainer(props) {\r\n\r\n    const context = React.useContext(AppContext)\r\n    const history = useHistory();\r\n\r\n    function OnClick(){\r\n        history.push(\"/cart\")\r\n    }\r\n\r\n    return (\r\n        <bs.Navbar expand=\"lg\">\r\n        <img alt='logo' src={`${process.env.PUBLIC_URL}/android-chrome-192x192.png`} width='75rem'/>\r\n        <bs.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <bs.Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <bs.Nav className=\"mr-auto\">\r\n            <bs.Nav.Link href=\"/\">Home</bs.Nav.Link>\r\n            <bs.Nav.Link href=\"/about\">About</bs.Nav.Link>\r\n            <bs.Nav.Link href=\"/help\">Help</bs.Nav.Link>\r\n            </bs.Nav>\r\n            <bs.Nav>\r\n            <bs.Nav.Link onClick = {OnClick}><i className=\"fas fa-shopping-cart\">({context.cartCount})</i></bs.Nav.Link>\r\n            <bs.NavDropdown title=\"Welcome, Kyle\" alignRight>\r\n                <bs.NavDropdown.Item href=\"#\">Current Status Report</bs.NavDropdown.Item>\r\n                <bs.NavDropdown.Item href=\"#\">Incoming Orders</bs.NavDropdown.Item>\r\n                <bs.NavDropdown.Item href=\"#\">Completed Orders</bs.NavDropdown.Item>\r\n                <bs.NavDropdown.Divider />\r\n                <bs.NavDropdown.Item href=\"#\">Account Details</bs.NavDropdown.Item>\r\n            </bs.NavDropdown>\r\n            </bs.Nav>\r\n        </bs.Navbar.Collapse>\r\n        </bs.Navbar>\r\n    )\r\n}\r\n\r\nexport default HeaderContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\nfunction LeftContainer(props) {\r\n\r\n\r\n    const context = React.useContext(AppContext)\r\n\r\n    \r\n\r\n    return (\r\n        <bs.Nav className=\"flex-column\">\r\n                <Link \r\n                to={'/'} className=\"nav-link\">All Products ({context.products.length}) </Link>\r\n                {context.categories.map(post => (\r\n                    <Link \r\n                    className=\"nav-link\" \r\n                    to={`/category/` + post.title} \r\n                    key={post.id}>\r\n                        {post.title + \" (\" + post.count + \")\"}\r\n                    </Link>\r\n                ))}\r\n        </bs.Nav>\r\n    )\r\n}\r\n\r\nexport default LeftContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction RightContainer(props) {\r\n    return (\r\n        <bs.Container>\r\n        <h1>Recent:</h1>\r\n        </bs.Container>        \r\n    )\r\n}\r\n\r\nexport default RightContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction FooterContainer(props) {\r\n    return (\r\n        <bs.Container className=\"footer-copyright text-center py-3\">\r\n            &copy; 2020 Northwest Labs   \r\n        </bs.Container>\r\n    )\r\n}\r\n\r\nexport default FooterContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction ProductCard(props) {\r\n\r\n    const myProduct = props.product\r\n\r\n    return (\r\n        <bs.Card style={{ width: '13rem'}}>\r\n            <Link \r\n                className=\"position-absolute btn\" \r\n                style={{ position: 'absolute', top: '.5rem', right: '.5rem', backgroundColor: 'lightblue', color: 'black'}}\r\n                to={`/product/${myProduct.id}`} \r\n            >\r\n                    Details\r\n            </Link>\r\n            <bs.Card.Img variant=\"top\" src={`${process.env.PUBLIC_URL}/products/${myProduct.filename}-1.png`} />\r\n            <bs.Card.Body style={{ backgroundColor: '#f2f2f2'}}>\r\n                <bs.Card.Title>{myProduct.name}</bs.Card.Title>\r\n                <bs.Card.Text>${myProduct.price}</bs.Card.Text>\r\n            </bs.Card.Body>\r\n        </bs.Card>\r\n    )\r\n}\r\n\r\nexport default ProductCard","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport {useParams} from 'react-router-dom'\r\nimport ProductCard from \"./product-card\"\r\nimport AppContext from './context'\r\n\r\nfunction Home(props) {\r\n\r\n    const {id} = useParams();\r\n\r\n    const context = React.useContext(AppContext)\r\n\r\n    if (id != null)\r\n    {\r\n        let myProducts = [];\r\n        for (const p of context.products)\r\n        {\r\n            if (p.category.title === id)\r\n            {\r\n                myProducts.push(p);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <bs.Container fluid>\r\n                <bs.Row>\r\n                    {Object.values(myProducts).map((product) => (\r\n                        <bs.Col md=\"3\" key={product.id}>\r\n                            <ProductCard product={product} key={product.id}></ProductCard>\r\n                        </bs.Col>\r\n                    ))}\r\n                </bs.Row>\r\n            </bs.Container>\r\n        )\r\n    }\r\n    else \r\n    {\r\n        let myProducts = [];\r\n        for (const p of context.products)\r\n        {\r\n            myProducts.push(p);\r\n        }\r\n\r\n        return (\r\n            <bs.Container fluid>\r\n                <bs.Row>\r\n                    {Object.values(myProducts).map((product) => (\r\n                        <bs.Col md=\"3\" key={product.id}>\r\n                            <ProductCard product={product} key={product.id}></ProductCard>\r\n                        </bs.Col>\r\n                    ))}\r\n                </bs.Row>\r\n            </bs.Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction About(props) {\r\n    return (\r\n        <bs.Container fluid className=\"p-0\">\r\n            <bs.Row noGutters>\r\n                <bs.Col style={{ textAlign: \"center\", padding: \"2rem 0\"}}>\r\n                    <i className=\"fas fa-vials fa-10x\"></i>\r\n                </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row noGutters style={{ padding: \"4rem 0\"}} className=\"bg shadow\">\r\n                <bs.Col>\r\n                    <h1 className=\"text-center\">Northwest Labs provides a number of services for Assay Testing. The company has been around since 1996 and since its beginning has grown into a worldwide company, testing compounds for pharamastists all around the globe.</h1>\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction Help(props) {\r\n    return (\r\n        <bs.Container fluid className=\"p-0\">\r\n            <bs.Row noGutters>\r\n                <bs.Col style={{ textAlign: \"center\", padding: \"2rem 0\"}}>\r\n                <i className=\"far fa-question-circle fa-10x\"></i>\r\n                </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row noGutters style={{ padding: \"4rem 0\"}} className=\"bg shadow\">\r\n                <bs.Col>\r\n                    <h1 className=\"text-center\">If you need help ordering, or want more information about what kinds of assay tests we can provide, please contact us at 1-800-888-8888.</h1>\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n    )\r\n}\r\n\r\nexport default Help","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport {useHistory, Link, useParams} from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\nfunction ProductDetails(props) {\r\n\r\n    const context = React.useContext(AppContext)\r\n    const history = useHistory();\r\n\r\n    function OnClick(){\r\n        context.addToCart(id)\r\n        history.push(\"/cart\")\r\n    }\r\n\r\n    let [imgIdx, setImgIdx] = React.useState(1);\r\n    const {id} = useParams();\r\n    const searchId = context.products.find(p => {\r\n        return (p.id.toString() === id)\r\n    })\r\n    if (searchId != null)\r\n    {\r\n        return (\r\n            <bs.Container fluid>\r\n                <bs.Row>\r\n                    <bs.Col md=\"7\">\r\n                        <h1>{searchId.name}</h1>\r\n                        <h2>${searchId.price}</h2>\r\n                        <p>{searchId.description}</p>\r\n                        <br/>\r\n                        <Link \r\n                            variant =  \"warning\"\r\n                            className = \"btn btn-primary\"\r\n                            onClick = {OnClick}\r\n                            to = \"/cart\"\r\n                            > Add To Cart   \r\n                        </Link> \r\n                    </bs.Col>\r\n                    <bs.Col md=\"5\">\r\n                        <img className=\"float-right\" width=\"300px\" height=\"300px\" style={{ paddingTop: '2rem', paddingRight: '2rem' }} src={`${process.env.PUBLIC_URL}/products/${searchId.filename}-${imgIdx}.png`} alt=\"1\"/>\r\n                    </bs.Col>\r\n                </bs.Row>\r\n                <bs.Row>\r\n                    <br></br>\r\n                </bs.Row>\r\n                <bs.Row>\r\n                    <bs.Col md=\"5\">\r\n                    </bs.Col>\r\n                    <bs.Col md=\"6\">\r\n                        <img onMouseOver={() => {setImgIdx(4)}} onMouseLeave={() => {setImgIdx(1)}} style={{ marginRight: '9px'}} className=\"float-right\" width=\"30px\" height=\"30px\" src={`${process.env.PUBLIC_URL}/products/${searchId.filename}-4.png`} alt=\"4\"/>\r\n                        <img onMouseOver={() => {setImgIdx(3)}} onMouseLeave={() => {setImgIdx(1)}} style={{ marginRight: '9px'}} className=\"float-right\" width=\"30px\" height=\"30px\" src={`${process.env.PUBLIC_URL}/products/${searchId.filename}-3.png`} alt=\"3\"/>\r\n                        <img onMouseOver={() => {setImgIdx(2)}} onMouseLeave={() => {setImgIdx(1)}} style={{ marginRight: '9px'}} className=\"float-right\" width=\"30px\" height=\"30px\" src={`${process.env.PUBLIC_URL}/products/${searchId.filename}-2.png`} alt=\"2\"/>\r\n                        <img onMouseOver={() => {setImgIdx(1)}} onMouseLeave={() => {setImgIdx(1)}} style={{ marginRight: '9px'}} className=\"float-right\" width=\"30px\" height=\"30px\"  src={`${process.env.PUBLIC_URL}/products/${searchId.filename}-1.png`} alt=\"1\"/>\r\n                    </bs.Col>\r\n                </bs.Row>\r\n            </bs.Container>\r\n        )\r\n    }\r\n    else \r\n    {\r\n        return (\r\n            <div>Not Found</div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default ProductDetails","import React from \"react\";\nimport * as bs from 'react-bootstrap';\nimport \"@fortawesome/fontawesome-free/css/all.css\";\nimport AppContext from './context';\nimport Table from 'react-bootstrap/Table';\nimport {Link} from 'react-router-dom'\n\nfunction Cart()\n    {\n        const context = React.useContext(AppContext)\n        let totalCost = 0;\n        return(\n                       \n                 <bs.Container style={{ padding: \"2rem 2rem\"}}>   \n                       <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                            <th>Image</th>\n                            <th>Name</th>\n                            <th>Price</th>\n                            <th>Quantity</th>\n                            <th>Sub Total</th>\n                            <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Object.keys(context.cart).map(id => {\n                                let item = context.products.find(x => x.id.toString() === id)\n                                totalCost += (item.price) * (context.cart[id])\n                                return(\n                                    <tr key={item.id}>\n                                    <td><bs.Image \n                                    src= {process.env.PUBLIC_URL + \"/products/\" + item.filename + \"-1.png\"} width=\"50\"/>\n                                     </td>\n                                    <td>{item.name}</td>\n                                    <td>${item.price}</td>\n                                    <td>{context.cart[id]}</td>\n                                    <td>{(item.price) * (context.cart[id])}</td>\n                                    <td><bs.Button\n                                    \n                                        variant = 'secondary'\n                                        onClick = {e => {context.removeFromCart(item.id)}}\n                                    \n                                    >\n                                    Remove\n                                    </bs.Button>\n                                    </td>\n                                    </tr>\n                                    \n                                )\n                            })}\n                           <tr>\n                               <td></td>\n                               <td></td>\n                               <td></td>\n                               <td></td>\n                               <th>Total</th>\n                               <td>${totalCost.toFixed(2)}</td>\n                           </tr>\n                        </tbody>\n                        </Table>  \n                        <div style={{textAlign: \"center\"}}>   \n                        <Link\n                            className=\"btn btn-primary\" \n                            style={{display: \"inline-block\"}}\n                            to={`/checkout`} \n                        >\n                            Checkout\n                        </Link>\n                        </div>\n                    </bs.Container>\n        )\n    }   \nexport default Cart","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { Formik, Form, Field} from 'formik'\nimport AppContext from './context';\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\n\n\nconst stripePromise = loadStripe(\"pk_test_R3XusGPnU17XkGw2fjUSZ7RK007jAFWpR3\");\n\n\nfunction Checkout(props) {\n    \n    // we'll add Stripe's Elements component here later\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutController />\n        </Elements>\n    )\n}\nexport default Checkout\n\n\nconst CheckoutController = props => {\n    const context = React.useContext(AppContext)\n\n    const total = context.cartTotal\n\n    const history = useHistory()\n\n    const stripe = useStripe()\n\n    const elements = useElements()\n\n    return (\n        <Formik\n            initialValues={{\n                name: 'Conrad Fox',\n                address1: '1234',\n                address2: '5678',\n                city: 'Provo',\n                state: 'UT',\n                zipcode: '84602',\n            }}\n            validateOnChange={false}\n            validateOnBlur={false}\n            validate={values => {\n                const errors = {}\n                if (!values.name) {\n                    errors.name = 'Required'\n                }\n                if (!values.address1) {\n                    errors.address1 = 'Required'\n                }\n                if (!values.city) {\n                    errors.city = 'Required'\n                }\n                if (!values.state) {\n                    errors.state = 'Required'\n                }\n                if (!values.zipcode) {\n                    errors.zipcode = 'Required'\n                }\n                else if (values.zipcode.length !== 5)\n                {\n                    errors.zipcode = 'Zipcode must be 5 digits'\n                }\n                return errors\n            }}\n            onSubmit={async (values, actions) => {\n                console.log('submit', values)\n                const resp = await axios.post('http://localhost:8000/api/sale/', {\n                    name: values.name,\n                    address1: values.address1,\n                    address2: values.address2,\n                    city: values.city,\n                    state: values.state,\n                    zipcode: values.zipcode,\n                    total: total,\n                    items: context.cart,\n                    payment_intent: {},\n                })\n                \n                const result = await stripe.confirmCardPayment(resp.data.client_secret, {\n                    payment_method: {\n                      card: elements.getElement(CardElement),\n                      billing_details: {\n                          name: values.name\n                      }\n                    }\n                  });\n                if (result.error)\n                {\n                    console.log(result.error.message)\n                    actions.setFieldError('card', result.error.message)\n                }\n                else if (result.paymentIntent.status === 'succeeded')\n                {\n                    context.clearCart()\n                    history.push('/receipt')\n                }\n                else \n                {\n                    setTimeout(() => {\n                        actions.setSubmitting(false)\n                    }, 2000)\n                }\n            }}\n        >{form => (\n            <PaymentForm form={form} total={total} />\n        )}</Formik>\n    )\n}\n\nconst CARD_ELEMENT_OPTIONS = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#aab7c4\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n/**\n * The form layout/html.\n * This component needs finishing.\n */\nconst PaymentForm = props => (\n    <Form>\n        <bs.Row noGutters className=\"flex-grow-1\">\n            <bs.Col md=\"6\">\n                <bs.Card>\n                    <bs.Card.Header as=\"h4\">Shipping</bs.Card.Header>\n                    <bs.Card.Body>    \n                        <Input disable={props.isSubmitting} title=\"Name:\" name=\"name\" type=\"text\" />\n                        <Input disable={props.isSubmitting} title=\"Address 1:\" name=\"address1\" type=\"text\" />\n                        <Input disable={props.isSubmitting} title=\"Address 2:\" name=\"address2\" type=\"text\" />\n                        <Input disable={props.isSubmitting} title=\"City:\" name=\"city\" type=\"text\" />\n                        <Input disable={props.isSubmitting} title=\"State:\" name=\"state\" type=\"text\" />\n                        <Input disable={props.isSubmitting} title=\"Zipcode:\" name=\"zipcode\" type=\"text\" />\n                    </bs.Card.Body>\n                </bs.Card>\n            </bs.Col>\n            <bs.Col md=\"6\">\n                <Field name='card'>{rProps =>(\n                    <bs.Card>\n                        <bs.Card.Header as=\"h4\">Payment</bs.Card.Header>\n                        <bs.Card.Body>\n                            <CardElement options={CARD_ELEMENT_OPTIONS} disabled={props.form.isSubmitting}/>\n                            {rProps.meta.error &&\n                            <div className=\"text-danger\">{rProps.meta.error}</div>}\n                        </bs.Card.Body>\n                    </bs.Card>\n                )}\n                </Field>\n                <br/>\n                <p>Your card will be charged ${props.total.toFixed(2)}</p>\n                <div style={{textAlign: \"center\"}}>\n                    <bs.Button \n                        style={{display: \"inline-block\"}}\n                        className=\"btn btn-success\" \n                        type=\"submit\" \n                        disabled={props.form.isSubmitting} onClick={e => {console.log(\"purchase button\")}}>\n                        {props.form.isSubmitting && <span className=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>}\n                        Purchase\n                    </bs.Button>\n                </div>\n            </bs.Col>\n        </bs.Row>\n    </Form>\n)\n\n\n/**\n * A form input.\n *   props.title - the title that shows above the input box\n *   props.type - the type of input (see React Bootstrap Form.Control)\n *   props.placeholder - placeholder text in the input.\n * This component is finished and doesn't need additional work.\n */\nconst Input = (props) => (\n    <Field name={props.name}>{rProps => (\n        <bs.Form.Group>\n            {props.title &&\n                <bs.Form.Label>{props.title}</bs.Form.Label>\n            }\n            <bs.Form.Control\n                type={props.type}\n                placeholder={props.placeholder}\n                disabled={rProps.form.isSubmitting}\n                {...rProps.field}\n            />\n            {rProps.meta.touched && rProps.meta.error &&\n                <div className=\"text-danger\">{rProps.meta.error}</div>\n            }\n        </bs.Form.Group>\n    )}</Field>\n)","import React from \"react\";\n\nfunction Receipt() {\n\n\n    return (\n        <div>\n        <h1>Thanks!</h1>\n        <p>Thank you for your order.</p>\n        </div>\n    )\n}\n\nexport default Receipt","import React from 'react';\nimport './App.scss';\nimport * as bs from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport HeaderContainer from './header-container'\nimport LeftContainer from './left-container'\nimport RightContainer from './right-container'\nimport FooterContainer from './footer-container'\nimport Home from './home'\nimport About from './about'\nimport Help from './help'\nimport ProductDetails from './product-details'\nimport Cart from './shopping-cart'\nimport Checkout from './checkout'\nimport Receipt from './receipt'\n\nfunction App(props) {\n  return (\n    <Router>\n      <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 shadow-sm\">\n          <bs.Col className=\"px-3 py-2\" style={{backgroundColor: \"lightgrey\"}}>\n            <HeaderContainer/>\n          </bs.Col>\n        </bs.Row>\n        <bs.Row noGutters className=\"flex-grow-1\">\n          <bs.Col md=\"2\" className=\"px-3 py-4 shadow\" style={{backgroundColor: \"lightblue\"}}>\n            <LeftContainer/>\n          </bs.Col>\n          <bs.Col md=\"8\" style={{backgroundColor: \"#e8fbff\"}}>\n            <Switch>\n              <Route path=\"/product/:id\">\n                <ProductDetails/>\n              </Route>\n              <Route path=\"/about\">\n                <About/>\n              </Route>\n              <Route path=\"/help\">\n                <Help/>\n              </Route>\n              <Route path=\"/category/:id\">\n                <Home/>\n              </Route>\n              <Route path=\"/cart\">\n                <Cart/>\n              </Route>\n              <Route path=\"/checkout\">\n                <Checkout/>\n              </Route>\n              <Route path=\"/receipt\">\n                <Receipt/>\n              </Route>\n              <Route path=\"/\">\n                <Home/>\n              </Route>\n            </Switch>\n          </bs.Col>\n          <bs.Col md=\"2\" className=\"px-3 py-4 shadow\" style={{backgroundColor: \"#169252\"}}>\n            <RightContainer/>\n          </bs.Col>\n        </bs.Row>\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0\">\n          <bs.Col className=\"px-3 py-2\" style={{backgroundColor: \"#6efae5\"}}>\n            <FooterContainer/>\n          </bs.Col>\n        </bs.Row>\n      </bs.Container>\n    </Router>  \n  );\n}\n\nexport default App;\n","import React from 'react'\nimport axios from 'axios'\nimport AppContext from './context'\nimport App from './App'\nimport produce from 'immer'\n\n/** The context provider for our app */\nexport default class AppProvider extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.actions = {\n            addToCart: this.addToCart,\n            removeFromCart: this.removeFromCart,\n            clearCart: this.clearCart,\n        }\n        this.state = {\n            categories: [],\n            products: [],\n            cart: {},\n            cartCount: 0,\n            cartTotal: 0,\n        }\n    }\n\n    addToCart = pid => {\n        this.setState(state => produce(state, draft => {\n            const qty = draft.cart[pid]\n            if(!qty){\n                draft.cart[pid] = 1\n            }\n            else\n            {\n                draft.cart[pid] += 1\n            }\n            draft.cartCount = 0\n            for(let total of Object.values(draft.cart)){\n                draft.cartCount += total\n            }\n            draft.cartTotal = 0\n            for(let prodID of Object.keys(draft.cart)){\n                let item = this.state.products.find(x => x.id.toString() === prodID)\n                draft.cartTotal += (item.price) * (draft.cart[prodID])\n            }\n        }))\n    }\n\n    removeFromCart = pid => {\n        this.setState(state => produce (state, draft => {\n            let deleteItem = Object.keys(draft.cart[pid])\n            if(deleteItem){\n                draft.cartCount -= draft.cart[pid]\n                delete draft.cart[pid]\n            }\n            draft.cartTotal = 0\n            for(let prodID of Object.keys(draft.cart)){\n                let item = this.state.products.find(x => x.id.toString() === prodID)\n                draft.cartTotal += (item.price) * (draft.cart[prodID])\n            }\n        }))\n    }\n\n    clearCart = () => {\n        this.setState(state => produce (state, draft => {\n            draft.cart = {}\n            draft.cartCount = 0\n            draft.cartTotal = 0\n        }))\n    }\n\n\n\n    render() {\n        if(this.state.products === null) {\n            return (<div>Loading...</div>)\n        }\n        if(this.state.categories === null) {\n            return (<div>Loading...</div>)\n        }\n\n\n        return (\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\n                <App />\n            </AppContext.Provider>\n        )\n    }\n\n    async componentDidMount() {\n        const resp = await axios.get('http://localhost:8000/api/category/')\n        const prod = await axios.get('http://localhost:8000/api/product/')\n        // do this for products\n        this.setState({\n            categories: resp.data.map(cat => ({\n                ...cat,\n                count: prod.data.filter(pro => cat.id === pro.category.id).length\n            })), \n            products: prod.data,\n        })\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport AppProvider from './context-provider';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}